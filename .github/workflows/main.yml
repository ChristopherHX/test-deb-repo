
# Simple workflow for deploying static content to GitHub Pages
name: Deploy static deb repo to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    # branches: [main]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        repo:
        - mcpelauncher-manifest
        - mcpelauncher-ui-manifest
        - msa-manifest
        platform:
        - name: focal
          container: buildpack-deps:focal
          deps: apt-get update && apt-get install -y --no-install-recommends g++ clang cmake make git ca-certificates libssl-dev libpng-dev libx11-dev libxi-dev libcurl4-openssl-dev libudev-dev libevdev-dev libegl1-mesa-dev libssl-dev libasound2 qtbase5-dev qtwebengine5-dev qtdeclarative5-dev libqt5svg5-dev qml-module-qtquick2 qml-module-qtquick-layouts qml-module-qtquick-controls qml-module-qtquick-controls2 qml-module-qtquick-window2 qml-module-qtquick-dialogs qml-module-qt-labs-settings qml-module-qt-labs-folderlistmodel qml-module-qtwebengine libssl-dev libcurl4-openssl-dev libuv1-dev libzip-dev libprotobuf-dev protobuf-compiler qtbase5-dev qtwebengine5-dev qtdeclarative5-dev libqt5svg5-dev qml-module-qtquick2 qml-module-qtquick-layouts qml-module-qtquick-controls qml-module-qtquick-controls2 qml-module-qtquick-window2 qml-module-qtquick-dialogs qml-module-qt-labs-settings qml-module-qt-labs-folderlistmodel
          generator: DEB
        - name: jammy
          container: buildpack-deps:jammy
          deps: apt-get update && apt-get install -y --no-install-recommends g++ clang cmake make git ca-certificates libssl-dev libpng-dev libx11-dev libxi-dev libcurl4-openssl-dev libudev-dev libevdev-dev libegl1-mesa-dev libssl-dev libasound2 qtbase5-dev qtwebengine5-dev qtdeclarative5-dev libqt5svg5-dev qml-module-qtquick2 qml-module-qtquick-layouts qml-module-qtquick-controls qml-module-qtquick-controls2 qml-module-qtquick-window2 qml-module-qtquick-dialogs qml-module-qt-labs-settings qml-module-qt-labs-folderlistmodel qml-module-qtwebengine libssl-dev libcurl4-openssl-dev libuv1-dev libzip-dev libprotobuf-dev protobuf-compiler qtbase5-dev qtwebengine5-dev qtdeclarative5-dev libqt5svg5-dev qml-module-qtquick2 qml-module-qtquick-layouts qml-module-qtquick-controls qml-module-qtquick-controls2 qml-module-qtquick-window2 qml-module-qtquick-dialogs qml-module-qt-labs-settings qml-module-qt-labs-folderlistmodel
          generator: DEB
        - name: fedora-36
          container: fedora:36
          deps: dnf install -y gcc-c++ clang cmake make git ca-certificates libstdc++ glibc-devel libpng-devel zlib-devel libX11-devel libXi-devel libcurl-devel systemd-devel libevdev-devel mesa-libEGL-devel alsa-lib pulseaudio-libs mesa-dri-drivers systemd-devel libXtst-devel openssl-devel qt5-qtbase-devel qt5-qtwebengine-devel qt5-qtdeclarative-devel qt5-qtsvg-devel qt5-qtquickcontrols qt5-qtquickcontrols2 libuv-devel libzip-devel protobuf-devel protobuf-compiler qt5-qtbase-devel qt5-qtwebengine-devel qt5-qtdeclarative-devel qt5-qtsvg-devel qt5-qtquickcontrols qt5-qtquickcontrols2 fedora-packager rpmdevtools
          generator: RPM
        - name: fedora-37
          container: fedora:37
          deps: dnf install -y gcc-c++ clang cmake make git ca-certificates libstdc++ glibc-devel libpng-devel zlib-devel libX11-devel libXi-devel libcurl-devel systemd-devel libevdev-devel mesa-libEGL-devel alsa-lib pulseaudio-libs mesa-dri-drivers systemd-devel libXtst-devel openssl-devel qt5-qtbase-devel qt5-qtwebengine-devel qt5-qtdeclarative-devel qt5-qtsvg-devel qt5-qtquickcontrols qt5-qtquickcontrols2 libuv-devel libzip-devel protobuf-devel protobuf-compiler qt5-qtbase-devel qt5-qtwebengine-devel qt5-qtdeclarative-devel qt5-qtsvg-devel qt5-qtquickcontrols qt5-qtquickcontrols2 fedora-packager rpmdevtools
          generator: RPM

    container: ${{ matrix.platform.container}}
    steps:
    - name: Install Deps
      run: ${{ matrix.platform.deps }}
    - name: Get Sources
      run: |
        git clone --recursive https://github.com/minecraft-linux/${{ matrix.repo }} mcpelauncher
        mv mcpelauncher/CMakeLists.txt mcpelauncher/CMakeLists.org.txt
    - name: Create CMakeLists.txt
      run: |
        cmake_minimum_required(VERSION 3.0)
        project(${{ matrix.repo }})
        include(./CMakeLists.org.txt)

        set(CPACK_GENERATOR "TGZ;${{ matrix.platform.generator }}")
        set(CPACK_PACKAGE_CONTACT "https://github.com/minecraft-linux/${{ matrix.repo }}/issues")
        set(CPACK_DEBIAN_PACKAGE_DEPENDS "libc6, ca-certificates, qml-module-qtquick2, qml-module-qtquick-layouts, qml-module-qtquick-controls, qml-module-qtquick-controls2, qml-module-qtquick-window2, qml-module-qtquick-dialogs, qml-module-qt-labs-settings, qml-module-qt-labs-folderlistmodel")
        set(CPACK_DEBIAN_PACKAGE_VERSION "0.8.2.${{ github.run_id }}.${{ github.run_attempt }}~${{ matrix.platform.name }}")
        set(CPACK_DEBIAN_FILE_NAME DEB-DEFAULT)
        set(CPACK_RPM_PACKAGE_VERSION "0.8.2.${{ github.run_id }}.${{ github.run_attempt }}~${{ matrix.platform.name }}")
        set(CPACK_RPM_SPEC_MORE_DEFINE "%define __spec_install_post /bin/true")
        set(CPACK_RPM_FILE_NAME RPM-DEFAULT)

        include(CPack)
      shell: cp {0} mcpelauncher/CMakeLists.txt
    - name: Configure
      run: CC=clang CXX=clang++ cmake -S mcpelauncher -B mcpelauncher-build -DCMAKE_BUILD_TYPE=Release
    - name: Package Source
      if: "false"
      run: cmake --build mcpelauncher-build --target package_source --parallel
    - name: Build
      run: cmake --build mcpelauncher-build --target package --parallel
    - name: Upload artifacts
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.platform.name }}
        path: |
          mcpelauncher-build/*.tar.*
          mcpelauncher-build/*.deb
          mcpelauncher-build/*.rpm

  # Single deploy job since we're just deploying
  deploy:
    needs: build-linux
    # Allow one concurrent deployment
    concurrency:
      group: "pages"
      cancel-in-progress: true
    # Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
    permissions:
      contents: read
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Import gpg private key
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --import
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
      
      - name: add cppfw repo to install myci scripts from
        uses: myci-actions/add-deb-repo@master
        with:
          repo: deb http://gagis.hopto.org/repo/cppfw/$(lsb_release --id --short | tr '[:upper:]' '[:lower:]') $(lsb_release --codename --short) main
          repo-name: cppfw
          keys-asc: http://gagis.hopto.org/repo/cppfw/pubkey.gpg
      - name: install debian package tools
        run: |
          sudo apt --quiet update
          sudo apt --quiet install --assume-yes dpkg-dev debhelper devscripts myci rpm
      - name: Install freight
        run: |
          git clone https://github.com/freight-team/freight.git
          make -C freight && sudo make -C freight install
          rm -rf freight
      - name: Download package
        uses: actions/download-artifact@v3
        with:
          path: packages
      - name: Add package
        run: |
          mkdir webpage
          myci-freight-add.sh --base-dir $PWD/webpage --repo minecraft-linux/deb --distro focal --component main packages/focal/*.deb
          myci-freight-add.sh --base-dir $PWD/webpage --repo minecraft-linux/deb --distro jammy --component main packages/jammy/*.deb

          first_key_email=$(gpg --list-keys | sed -E -n -e 's/.*<([^ >]*)>.*/\1/p' | head -1)
          echo "%_signature gpg" > ~/.rpmmacros
          echo "%_gpg_name \"$first_key_email\"" >> ~/.rpmmacros
          rpm --add-sign packages/fedora-36/*.rpm packages/fedora-37/*.rpm
          mkdir -p webpage/minecraft-linux/fedora-36
          mv packages/fedora-36/*.rpm webpage/minecraft-linux/fedora-36
          mkdir -p webpage/minecraft-linux/fedora-37
          mv packages/fedora-37/*.rpm webpage/minecraft-linux/fedora-37
          docker run --rm -v $PWD/webpage:/webpage fedora:37 bash -c "dnf install -y createrepo && createrepo /webpage/minecraft-linux/fedora-36 && createrepo /webpage/minecraft-linux/fedora-37"
          sudo chown -R "$UID:$UID" webpage/minecraft-linux/fedora-36
          sudo chown -R "$UID:$UID" webpage/minecraft-linux/fedora-37
      - name: Add default html
        run: |
          <html>
          <body>
          <span>deb https://christopherhx.github.io/test-deb-repo/minecraft-linux/deb jammy main</span>
          <span>curl -sS https://christopherhx.github.io/test-deb-repo/minecraft-linux/deb/pubkey.gpg | sudo tee -a /etc/apt/trusted.gpg.d/minecraft-linux-test.asc</span>
          </body>
          </html>
      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          path: 'webpage'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v1
